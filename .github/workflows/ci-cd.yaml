name: BUild And Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot Application with Maven
        working-directory: complete
        run: mvn clean package

      - name: Verify JAR Output
        run: |
          JAR_PATH="complete/target"
          echo "Files in $JAR_PATH:"
          ls -l $JAR_PATH
          test -f $JAR_PATH/*.jar || (echo "❌ JAR not found!" && exit 1)
      
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-jar
          path: complete/target/*.jar

  publish:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: ⬇️ Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: complete/target/

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: complete
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demo-spring-app:latest

  deploy:
    name: Deploy to EC2 with ELB
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: 📥 SSH and Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0

        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔄 Pulling Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/demo-spring-app:latest
            echo "🗑️ Stopping existing container..."
            docker stop springboot-container || true
            docker rm springboot-container || true
            echo "🚀 Starting new container..."
            docker run -d --name springboot-container -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/demo-spring-app:latest
            echo "✅ Deployment complete!"
